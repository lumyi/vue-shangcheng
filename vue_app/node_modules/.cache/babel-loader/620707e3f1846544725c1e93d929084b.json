{"remainingRequest":"C:\\Users\\22982\\Desktop\\vue-ui\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\22982\\Desktop\\vue-ui\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\22982\\Desktop\\vue-ui\\vue_app_00\\src\\components\\home\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\22982\\Desktop\\vue-ui\\vue_app_00\\src\\components\\home\\ShopCart.vue","mtime":1582900997889},{"path":"C:\\Users\\22982\\Desktop\\vue-ui\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\22982\\Desktop\\vue-ui\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\22982\\Desktop\\vue-ui\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Toast } from 'mint-ui';\nexport default {\n  data: function data() {\n    return {\n      shopList: [],\n      isSelected: false\n    };\n  },\n  created: function created() {\n    this.getShopList();\n  },\n  methods: {\n    // 全选框\n    selectAll: function selectAll(e) {\n      var cb = e.target.checked;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.shopList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          item.cb = cb;\n        } // this.isSelected=cb;\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      console.log(this.isSelected);\n    },\n    // 删除多个商品\n    delShops: function delShops() {\n      var _this = this;\n\n      var ids = \"\";\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.shopList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.cb == true) {\n            ids += item.id + \",\";\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      ids = ids.replace(/,$/, \"\");\n\n      if (ids.length == 0) {\n        Toast(\"请选中要删除的商品\");\n        return;\n      } // console.log(ids);\n\n\n      this.axios.get(\"http://localhost:3000/deleteShops\", {\n        params: {\n          ids: ids\n        }\n      }).then(function (res) {\n        Toast(res.data.msg);\n\n        _this.getShopList();\n      });\n    },\n    selected: function selected(e) {\n      // var id=e.target.dataset.id;\n      // for(var item of this.shopList){\n      //     if(item.id==id){\n      //         if(item.cb==false){\n      //             item.cb=true;\n      //         }else{\n      //             item.cb=false\n      //         }\n      //     }\n      // }\n      // 当前复选框选中状态\n      var cb = e.target.checked; // 当前复选框在数组中的下标\n\n      var i = e.target.dataset.i; // 让数组中的cb和当前复选框的状态一致\n\n      this.shopList[i].cb = cb; // console.log(this.shopList);\n      // 跟全选框关联\n\n      var listSize = this.shopList.length;\n      var count = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.shopList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          if (item.cb == true) {\n            count += 1;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (listSize == count) {\n        this.isSelected = true;\n      } else {\n        this.isSelected = false;\n      }\n    },\n    // 获得购物车中的商品\n    getShopList: function getShopList() {\n      var _this2 = this;\n\n      this.axios.get(\"http://localhost:3000/getShopCart\").then(function (res) {\n        // 为删除多个商品，添加cb属性，记录是否被选中\n        var rows = res.data.data;\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var item = _step4.value;\n            item.cb = false;\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        _this2.shopList = rows; // console.log(this.shopList);\n        // 没有登入成功\n\n        if (res.data.code == -1) {\n          Toast(res.data.msg);\n        }\n      });\n    },\n    // 删除购物车中单个商品\n    deleteShop: function deleteShop(e) {\n      var _this3 = this;\n\n      var i = e.target.dataset.i;\n      var id = e.target.dataset.id;\n      var postData = this.qs.stringify({\n        id: id\n      });\n      this.axios.post(\"http://localhost:3000/deleteShop\", postData).then(function (res) {\n        Toast(res.data.msg); // 删除购物车中对应的商品，\n        // this.getShopList();\n\n        _this3.shopList.splice(i, 1);\n      });\n    }\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"app-shopcart\">\r\n        <div class=\"mui-card\">\r\n            <div class=\"mui-card-header\">\r\n                <!-- 添加全选框 -->\r\n                全选<input type=\"checkbox\" @click=\"selectAll\" v-model=\"isSelected\">\r\n            </div>\r\n                <div class=\"mui-card-content\">\r\n                    <div class=\"mui-card-content-inner\">\r\n                        <ul class=\"mui-table-view\">\r\n                            <!-- 商品列表 -->\r\n                            <li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) of shopList\" :key=\"i\">\r\n                                <input type=\"checkbox\" name=\"shop\" :data-id=\"item.id\" v-model=\"item.cb\" @click=\"selected\" :data-i=\"i\">\r\n                                <a href=\"javascript:;\">\r\n                                    <img class=\"mui-media-object mui-pull-left\" src=\"http://localhost:3000/img/1.png\">\r\n                                    <div class=\"mui-media-body\">\r\n                                        <p class='mui-ellipsis'>\r\n                                            {{item.pname}}\r\n                                            {{item.price.toFixed(2)}}\r\n                                            <mt-button size=\"small\" type=\"primary\" :data-id=\"item.id\"\r\n                                            :data-i=\"i\" @click=\"deleteShop\">删除</mt-button>\r\n                                        </p>\r\n                                    </div>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            <div class=\"mui-card-footer\">\r\n                <input type=\"button\" value=\"删除指定商品\" @click=\"delShops\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n<script>\r\nimport {Toast} from 'mint-ui';\r\nexport default {\r\n    data(){\r\n        return {\r\n            shopList:[],\r\n            isSelected:false,\r\n        }\r\n    },\r\n    created(){\r\n        this.getShopList();\r\n    },\r\n    methods:{\r\n        // 全选框\r\n        selectAll(e){\r\n            var cb=e.target.checked;\r\n            for(var item of this.shopList){\r\n                item.cb=cb;\r\n            }\r\n            \r\n            // this.isSelected=cb;\r\n            console.log(this.isSelected)\r\n        },\r\n        // 删除多个商品\r\n        delShops(){\r\n            var ids=\"\";\r\n            for(var item of this.shopList){\r\n                if(item.cb==true){\r\n                    ids+=item.id+\",\";\r\n                }\r\n            }\r\n            ids=ids.replace(/,$/,\"\");\r\n            if(ids.length==0){\r\n                Toast(\"请选中要删除的商品\");\r\n                return;\r\n            }\r\n            // console.log(ids);\r\n            this.axios.get(\r\n                \"http://localhost:3000/deleteShops\",\r\n                {\r\n                    params:{\r\n                        ids\r\n                    }\r\n                }\r\n            ).then((res)=>{\r\n                Toast(res.data.msg);\r\n                this.getShopList();\r\n            })\r\n        },\r\n        selected(e){\r\n            // var id=e.target.dataset.id;\r\n            // for(var item of this.shopList){\r\n            //     if(item.id==id){\r\n            //         if(item.cb==false){\r\n            //             item.cb=true;\r\n            //         }else{\r\n            //             item.cb=false\r\n            //         }\r\n            //     }\r\n            // }\r\n            // 当前复选框选中状态\r\n            var cb=e.target.checked;\r\n            // 当前复选框在数组中的下标\r\n            var i=e.target.dataset.i;\r\n            // 让数组中的cb和当前复选框的状态一致\r\n            this.shopList[i].cb=cb;\r\n            // console.log(this.shopList);\r\n            // 跟全选框关联\r\n            var listSize=this.shopList.length;\r\n            var count=0;\r\n            for(var item of this.shopList){\r\n                if(item.cb==true){\r\n                    count+=1;\r\n                }\r\n            }\r\n            if(listSize==count){\r\n                this.isSelected=true;\r\n            }else{\r\n                this.isSelected=false;\r\n            }\r\n        },\r\n        // 获得购物车中的商品\r\n        getShopList(){\r\n            this.axios.get(\r\n                \"http://localhost:3000/getShopCart\"\r\n            ).then((res)=>{\r\n                // 为删除多个商品，添加cb属性，记录是否被选中\r\n                var rows=res.data.data;\r\n                for(var item of rows){\r\n                    item.cb=false;\r\n                }\r\n                this.shopList=rows;\r\n                // console.log(this.shopList);\r\n                // 没有登入成功\r\n                if(res.data.code==-1){\r\n                    Toast(res.data.msg);\r\n                }\r\n            })\r\n        },\r\n        // 删除购物车中单个商品\r\n        deleteShop(e){\r\n            var i=e.target.dataset.i;\r\n            var id=e.target.dataset.id;\r\n            var postData=this.qs.stringify({\r\n                id\r\n            });\r\n            this.axios.post(\r\n                \"http://localhost:3000/deleteShop\",\r\n                postData\r\n            ).then((res)=>{\r\n                Toast(res.data.msg);\r\n                // 删除购物车中对应的商品，\r\n                // this.getShopList();\r\n                this.shopList.splice(i,1);\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src\\components\\home"}]}